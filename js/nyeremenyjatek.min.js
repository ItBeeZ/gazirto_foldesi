document.addEventListener('DOMContentLoaded', function() {
    // Hamburger menü kezelése
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');

    hamburger.addEventListener('click', function() {
        hamburger.classList.toggle('active');
        navMenu.classList.toggle('active');
    });

    document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', () => {
            hamburger.classList.remove('active');
            navMenu.classList.remove('active');
        });
    });

    // Navbar scroll effekt
    window.addEventListener('scroll', function() {
        const navbar = document.querySelector('.navbar');
        if (window.scrollY > 50) {
            navbar.classList.add('scrolled');
        } else {
            navbar.classList.remove('scrolled');
        }
    });



    // Űrlap validáció és küldés
    const form = document.getElementById('registrationForm');
    const emailInput = document.getElementById('email');
    const emailError = document.getElementById('emailError');
    const successMessage = document.getElementById('formSuccess');

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Email validáció
        const email = emailInput.value.trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        
        if (!email) {
            emailError.textContent = 'Kérjük, adja meg az email címét!';
            emailInput.classList.add('error');
            return;
        } else if (!emailRegex.test(email)) {
            emailError.textContent = 'Kérjük, adjon meg egy érvényes email címet!';
            emailInput.classList.add('error');
            return;
        } else {
            emailError.textContent = '';
            emailInput.classList.remove('error');
        }

        try {
            // Generálunk egy egyedi azonosítót a böngészőhöz, ha még nincs
            let browserFingerprint = localStorage.getItem('browser_fingerprint');
            if (!browserFingerprint) {
                // Egyszerű fingerprint generálás (valós környezetben használj fingerprint2.js vagy hasonló könyvtárat)
                browserFingerprint = btoa(navigator.userAgent + navigator.language + screen.width + screen.height + new Date().getTimezoneOffset());
                localStorage.setItem('browser_fingerprint', browserFingerprint);
            }
            
            // API kulcs lekérése a környezeti változókból vagy konfigurációból
            // Valós környezetben ezt biztonságosabban kell kezelni
            // Például egy külön konfigurációs fájlból betöltve
            let apiKey = '';
            
            // Próbáljuk betölteni az API kulcsot a konfigurációból
            try {
                if (typeof emailConfig !== 'undefined' && emailConfig.apiKey) {
                    apiKey = emailConfig.apiKey;
                }
            } catch (e) {
                console.error('API kulcs betöltési hiba:', e);
            }
            
            // Teljes API URL összeállítása a konfigurációból
            // Itt módosítjuk, hogy az új backend végpontot hívja
            let apiUrl = '/api/email'; // Ez most már az új backend végpont
            
            // Ha van emailConfig és baseUrl, akkor azt használjuk
            if (typeof emailConfig !== 'undefined') {
                if (emailConfig.baseUrl && emailConfig.endpoints && emailConfig.endpoints.email) {
                    apiUrl = emailConfig.baseUrl + emailConfig.endpoints.email;
                }
            }
            
            // --- Részletes kommentek: ---
            // Itt történik a POST kérés az email mentéséhez
            // A szerver elvárja: { email: "valami@email.hu" }
            // A válasz siker esetén: { message: "Email sikeresen elmentve!" }
            // Hiba esetén: { error: "Hibaüzenet..." }
            console.log('API URL:', apiUrl);
            
            // Küldés a szerverre az email végpontra
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Browser-Fingerprint': browserFingerprint,
                    'X-API-Key': apiKey
                },
                body: JSON.stringify({ 
                    email: email
                })
            });

            const data = await response.json();

            if (response.ok) {
                // Sikeres regisztráció
                form.reset();
                form.style.display = 'none';
                successMessage.classList.add('show');
            } else {
                // Hiba történt
                emailError.textContent = data.message || 'Hiba történt a regisztráció során. Kérjük, próbálja újra!';
            }
        } catch (error) {
            console.error('Hiba:', error);
            emailError.textContent = 'Hiba történt a szerverrel való kommunikáció során. Kérjük, próbálja újra később!';
        }
    });

    // Input mezők focus/blur effektek
    emailInput.addEventListener('focus', function() {
        this.parentElement.classList.add('focused');
    });

    emailInput.addEventListener('blur', function() {
        this.parentElement.classList.remove('focused');
    });

    // Animációk görgetéskor
    const animateElements = document.querySelectorAll('.animate-on-scroll');
    
    function checkScroll() {
        animateElements.forEach(element => {
            const elementPosition = element.getBoundingClientRect().top;
            const screenPosition = window.innerHeight / 1.3;
            
            if (elementPosition < screenPosition) {
                element.classList.add('animate');
            }
        });
    }
    
    window.addEventListener('scroll', checkScroll);
    checkScroll(); // Kezdeti ellenőrzés

    // Aktuális év beállítása a láblécben
    document.getElementById('current-year').textContent = new Date().getFullYear();
});